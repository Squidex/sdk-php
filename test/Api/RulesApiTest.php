<?php
/**
 * RulesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Squidex API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * RulesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RulesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for rulesDeleteEvent
     *
     * Cancels an event..
     *
     */
    public function testRulesDeleteEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesDeleteEvents
     *
     * Cancels all events..
     *
     */
    public function testRulesDeleteEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesDeleteRule
     *
     * Delete a rule..
     *
     */
    public function testRulesDeleteRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesDeleteRuleEvents
     *
     * Cancels all rule events..
     *
     */
    public function testRulesDeleteRuleEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesDeleteRuleRun
     *
     * Cancel the current run..
     *
     */
    public function testRulesDeleteRuleRun()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesDisableRule
     *
     * Disable a rule..
     *
     */
    public function testRulesDisableRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesEnableRule
     *
     * Enable a rule..
     *
     */
    public function testRulesEnableRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesGetActions
     *
     * Get supported rule actions..
     *
     */
    public function testRulesGetActions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesGetEventSchema
     *
     * Provide the json schema for the event with the specified name..
     *
     */
    public function testRulesGetEventSchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesGetEventTypes
     *
     * Provide a list of all event types that are used in rules..
     *
     */
    public function testRulesGetEventTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesGetEvents
     *
     * Get rule events..
     *
     */
    public function testRulesGetEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesGetRules
     *
     * Get rules..
     *
     */
    public function testRulesGetRules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesPostRule
     *
     * Create a new rule..
     *
     */
    public function testRulesPostRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesPutEvent
     *
     * Retry the event immediately..
     *
     */
    public function testRulesPutEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesPutRule
     *
     * Update a rule..
     *
     */
    public function testRulesPutRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesPutRuleRun
     *
     * Run a rule..
     *
     */
    public function testRulesPutRuleRun()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesSimulateGET
     *
     * Simulate a rule..
     *
     */
    public function testRulesSimulateGET()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesSimulatePOST
     *
     * Simulate a rule..
     *
     */
    public function testRulesSimulatePOST()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rulesTriggerRule
     *
     * Trigger a rule..
     *
     */
    public function testRulesTriggerRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
